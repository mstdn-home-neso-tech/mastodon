# This file is designed for production server deployment, not local development work
# For a containerized local dev environment, see: https://github.com/mastodon/mastodon/blob/main/README.md#docker

services:
  caddy:
    image: caddy:latest
    container_name: caddy
    restart: always
    ports:
      - 30000:30000
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/caddy_data:/data
      - ./caddy/caddy_config:/config
      - ./public/system:/mastodon/public/system
      - ./caddy/logs:/var/log/caddy/
    networks:
      - internal_network
      - external_network
  db:
    restart: always
    image: postgres:14
    shm_size: 256mb
    networks:
      - internal_network
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'mastodon', '-d', 'mastodon_production']
    volumes:
      - ./postgres14:/var/lib/postgresql/data
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: mastodon
      POSTGRES_PASSWORD: mastodon
      POSTGRES_DB: mastodon_production
  redis:
    restart: always
    image: redis:7-alpine
    networks:
      - internal_network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
    volumes:
      - ./redis:/data

  # es:
  #   restart: always
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
  #   environment:
  #     - "ES_JAVA_OPTS=-Xms2G -Xmx8G -Des.enforce.bootstrap.checks=true"
  #     - "xpack.license.self_generated.type=basic"
  #     - "xpack.security.enabled=false"
  #     - "xpack.watcher.enabled=false"
  #     - "xpack.graph.enabled=false"
  #     - "xpack.ml.enabled=false"
  #     - "bootstrap.memory_lock=true"
  #     - "cluster.name=es-mastodon"
  #     - "discovery.type=single-node"
  #     - "thread_pool.write.queue_size=1000"
  #   networks:
  #      - external_network
  #      - internal_network
  #   healthcheck:
  #      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
  #   volumes:
  #      - ./elasticsearch:/usr/share/elasticsearch/data
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#      nofile:
#        soft: 65536
#        hard: 65536
    # ports:
    #   # - '127.0.0.1:9200:9200'
    #   - 9200:9200
  web:
    image: ghcr.io/mstdn-home-neso-tech/mastodon:develop
    # image: ghcr.io/mstdn-home-neso-tech/mastodon:sha-2d6a061
    # image: ghcr.io/mastodon/mastodon:v4.3.8

    restart: always
    env_file: .env.production
    command: bundle exec puma -C config/puma.rb
    networks:
      - external_network
      - internal_network
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1']
    ports:
      # - '127.0.0.1:3000:3000'
      - 3000:3000
    depends_on:
      - db
      - redis
      # - es
      - caddy
    volumes:
      - ./public/system:/mastodon/public/system

  streaming:
    image: ghcr.io/mstdn-home-neso-tech/mastodon:develop_streaming
    # image: ghcr.io/mstdn-home-neso-tech/mastodon:sha-2d6a061_streaming
    # image: ghcr.io/mastodon/mastodon-streaming:v4.3.8

    restart: always
    env_file: .env.production
    # command: node ./streaming
    command: node ./streaming/index.js

    networks:
      - external_network
      - internal_network
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1']
    ports:
      - '127.0.0.1:4000:4000'
    depends_on:
      - db
      - redis

  sidekiq:
    image: ghcr.io/mstdn-home-neso-tech/mastodon:develop
    # image: ghcr.io/mstdn-home-neso-tech/mastodon:sha-2d6a061
    # image: ghcr.io/mastodon/mastodon:v4.3.8

    restart: always
    env_file: .env.production
    environment:
      - DB_POOL=50
    command: bundle exec sidekiq -c 50
    depends_on:
      - db
      - redis
    networks:
      - external_network
      - internal_network
    volumes:
      - ./public/system:/mastodon/public/system
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]

  ## Uncomment to enable federation with tor instances along with adding the following ENV variables
  ## http_hidden_proxy=http://privoxy:8118
  ## ALLOW_ACCESS_TO_HIDDEN_SERVICE=true
  # tor:
  #   image: sirboops/tor
  #   networks:
  #      - external_network
  #      - internal_network
  #
  # privoxy:
  #   image: sirboops/privoxy
  #   volumes:
  #     - ./priv-config:/opt/config
  #   networks:
  #     - external_network
  #     - internal_network

networks:
  external_network:
  internal_network:
    internal: true
